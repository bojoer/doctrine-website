<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TagTable extends Doctrine_Table
{
  public function getTagIdsFromString($string)
  {
    // Parse string of tags in to normalized array of tag names
    // Will parse by spaces or comma if at least one is found in the string
    $sep = strpos($string, ',') !== false ? ',':' ';
    $tagNames = explode($sep, $string);
    $newTagNames = array();
    foreach ($tagNames as $key => $tagName)
    {
      $tagName = trim($tagName);
      if ($tagName)
      {
        $newTagNames[$key] = strtolower($tagName);
      }
    }

    // Save all tags that don't already exist in the database
    $tagsList = array();
    if ( ! empty($tagNames))
    {
      $tagNames = array_unique($tagNames);
      $existingTags = Doctrine_Query::create()
        ->from('Tag t INDEXBY t.name')
        ->whereIn('t.name', $tagNames)
        ->fetchArray();
      foreach ($existingTags as $tag)
      {
        $tagsList[] = $tag['id'];
      }
      foreach ($tagNames as $tagName)
      {
        if ( ! isset($existingTags[$tagName])) {
          $tag = new Tag();
          $tag->name = $tagName;
          $tag->save();
          $tagsList[] = $tag['id'];
        }
      }
    }
    return $tagsList;
  }
}