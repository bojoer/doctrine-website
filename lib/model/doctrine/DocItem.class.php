<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DocItem extends BaseDocItem
{
  public function __toString()
  {
    return $this->getTitle() . ' (' . $this->getApiRelease()->getName() . ')';
  }

  public function getApiRelease()
  {
    return $this->getApiReleases()->getFirst();
  }

  public function getApiReleasesString()
  {
    $releases = array();
    foreach ($this->getApiReleases() as $apiRelease)
    {
      $releases[] = $apiRelease->getName();
    }
    return implode(', ', $releases);
  }

  public function getApiReleaseLangToc(ApiRelease $apiRelease, $lang)
  {
    global $doctrine_svn_path;

    $path = $this->getSvnPath();
    $documentationPath = $doctrine_svn_path . '/docs' . $apiRelease->getSvnPath() . $path;
    $tocPath = $documentationPath . '/' . $lang . '.txt';

    if ( ! file_exists($tocPath))
    {
      $tocPath = str_replace($lang, 'en', $tocPath);
      $lang = 'en';
    }

    $dir = str_replace('.txt', '', $tocPath);
    $files = glob($dir . '/*.txt');

    return new Sensei_Doc_Toc($tocPath);
  }

  public function getLinkRouteForRelease($release = null)
  {
    if (is_null($release)) {
      $release = $this->getApiRelease();
      if (!$release) {
        $release = ApiReleaseTable::getLatest();
      }
    }
    $linkRoute = $this->_get('link_route');
    $linkRoute = str_replace(array('##RELEASE_SLUG##', '##RELEASE_NAME##'), array($release->getSlug(), $release->getName()), $linkRoute);
    return $linkRoute;
  }

  public function getRoute($release = null)
  {
    $user = sfContext::getInstance()->getUser();
    if (is_null($release)) {
      $release = $this->getApiRelease();
    }
    if ($route = $this->getLinkRouteForRelease($release)) {
      return $route;
    } else {
      return '@documentation_item_release_lang?release=' . $release->getSlug() . '&which=' . $this->getIdKey() . '&sf_culture=' . $user->getCulture();
    }
  }
}