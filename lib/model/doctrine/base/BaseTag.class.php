<?php

/**
 * BaseTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $BlogPosts
 * @property Doctrine_Collection $BlogPostTags
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method Doctrine_Collection getBlogPosts()    Returns the current record's "BlogPosts" collection
 * @method Doctrine_Collection getBlogPostTags() Returns the current record's "BlogPostTags" collection
 * @method Tag                 setId()           Sets the current record's "id" value
 * @method Tag                 setName()         Sets the current record's "name" value
 * @method Tag                 setBlogPosts()    Sets the current record's "BlogPosts" collection
 * @method Tag                 setBlogPostTags() Sets the current record's "BlogPostTags" collection
 * 
 * @package    doctrine_website
 * @subpackage model
 * @author     Jonathan H. Wage
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BlogPost as BlogPosts', array(
             'refClass' => 'BlogPostTag',
             'local' => 'tag_id',
             'foreign' => 'blog_post_id'));

        $this->hasMany('BlogPostTag as BlogPostTags', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}