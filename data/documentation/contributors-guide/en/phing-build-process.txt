The projects under the Doctrine umbrella use [Phing](http://phing.info/trac) to
automate the process for building our distributable PEAR packages.

++ Prerequisites

* You must have PEAR installed.
* You must have [Phing](http://phing.info/trac) installed. The easiest way is through [pear](http://phing.info/docs/guide/stable/chapters/Setup.html#Setup.PearInstall).
* You must have the [d51PearPkg2Task](http://pear.domain51.com/svn/Phing_d51PearPkg2Task/trunk/src/phing/tasks/ext/d51PearPkg2Task.php) added to the core Phing tasks.
* Copy the **build.properties.dev** file to **build.properties** and adjust any properties to your local environment, if necessary.

++ Building

Clone the Doctrine project that you want to build and from within the root
directory of the project (where the build.xml resides) run one of the following
commands.

    $ git clone git://github.com/doctrine/doctrine2.git doctrine2-orm
    $ cd doctrine2-orm

As mentioned previously, Doctrine uses submodules with git to make sure the
required dependencies are present. You can initialize these dependencies using
the following commands:

    $ git submodule init
    $ git submodule update

+++ Basic Build

You can simply run `phing` and it will build the sources that are packaged for
distribution:

    $ phing

After a successful build you will find the prepared code that will be packaged
for distribution in the **build** directory.

+++ Distributable Archives

If you want to produce a distributable PEAR archive run:

    $ phing build-packages

After a successful build you will find the distributable archive(s) in the
**dist** directory.

+++ Running Tests

The tests will be run automatically by most other targets but you can also run
them directly:

    $ phing test